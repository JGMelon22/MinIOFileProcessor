services:
  fileuploaderparta.api:
    image: fileuploaderparta.api
    build:
      context: .
      dockerfile: src/FileUploaderPartA.API/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - minio
      - kafka
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  
  mysql:
    image: mysql:lts
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=Melon@123
      - MYSQL_DATABASE=minio_process
      - MYSQL_DEFAULT_AUTHENTICATION_PLUGIN=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=Melon@123
    volumes:
      - minio-data:/data
    networks:
      - app-network
    command: server /data --console-address ":9001"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  minio-data:
  zookeeper-data:
  zookeeper-log:
  kafka-data: